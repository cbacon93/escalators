#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{listings}
\usepackage{color}
\usepackage{hyperref} % Link Ränder weglassen
\hypersetup{
    colorlinks=true,
    linkcolor=black,
    citecolor=black,
    filecolor=black,
    urlcolor=black,
}

\definecolor{mygreen}{rgb}{0,0.6,0}
\definecolor{bgcolor}{gray}{0.95}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{lightgray}{gray}{0.8}
\definecolor{mymauve}{rgb}{0.58,0,0.82}


\lstset{ %
  backgroundcolor=\color{bgcolor},   % choose the background color; you must add \usepackage{color} or \usepackage{xcolor}
  basicstyle=\footnotesize,        % the size of the fonts that are used for the code
  breakatwhitespace=false,         % sets if automatic breaks should only happen at whitespace
  breaklines=true,                 % sets automatic line breaking
  captionpos=b,                    % sets the caption-position to bottom
  commentstyle=\color{mygreen},    % comment style
  deletekeywords={...},            % if you want to delete keywords from the given language
  escapeinside={\%*}{*)},          % if you want to add LaTeX within your code
  extendedchars=true,              % lets you use non-ASCII characters; for 8-bits encodings only, does not work with UTF-8
  frame=none,	                   % adds a frame around the code
  keepspaces=true,                 % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
  keywordstyle=\color{blue},       % keyword style
  language=Matlab,                 % the language of the code
  otherkeywords={*,...},           % if you want to add more keywords to the set
  numbers=none,                    % where to put the line-numbers; possible values are (none, left, right)
  numbersep=5pt,                   % how far the line-numbers are from the code
  numberstyle=\tiny\color{gray}, % the style that is used for the line-numbers
  rulecolor=\color{lightgray},         % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
  showspaces=false,                % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
  showstringspaces=false,          % underline spaces within strings only
  showtabs=false,                  % show tabs within strings adding particular underscores
  stepnumber=1,                    % the step between two line-numbers. If it's 1, each line will be numbered
  stringstyle=\color{mymauve},     % string literal style
  tabsize=2,	                   % sets default tabsize to 2 spaces
  title=\lstname                   % show the filename of files included with \lstinputlisting; also try caption instead of title
}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 1
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Part*
Das Statistikprogramm
\end_layout

\begin_layout Standard
Das Statistikprogramm dient in erster Linie dazu, spaceballs.m beliebig oft
 ausführen zu lassen, um dann im Anschluss eine aussagekräftige Spielstatistik
 über Siege und Niederlagen zu erhalten.
 Im Folgenden wird die Funktionsweise erläutert und die Verwendung des RNG
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Random Number Generation
\end_layout

\end_inset

-Befehls erklärt.
\begin_inset Newline newline
\end_inset

Das Statistikprogramm gliedert sich in zwei Dateien.
 Der eigentliche Programmcode der Statistik ist als Funktion in stats.m geschrieb
en, welche über die statistics.m Datei aufgerufen wird.
 Letztere dient zur Festlegung der Parameter, die vom Nutzer an die Funktion
 übergeben werden.
\end_layout

\begin_layout Section
Parameterdeklaration in 
\noun on
statistics.m
\noun default
 
\end_layout

\begin_layout Standard
Es ist zu empfehlen, dass in spaceballs.m die Zeitrafferfunktion aktiviert
 wird, da ansonsten unnötig viel Zeit für den Durchlauf einer Statistik
 aufgewendet werden muss.
 Ebenfalls kann es nützlich sein die Zeichnung des Spielfeldes in Schritt.m
 abzuschalten, um die Rechenzeit zu verkürzen:
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

spiel.zeitraffer_checkbox_anfangswert = true;
\end_layout

\begin_layout LyX-Code

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Außerdem ist der komplette Initialisierungsabschnitt in spaceballs.m auszukomment
ieren.
\begin_inset Newline newline
\end_inset

Nachfolgend können zwischen drei unterschiedlichen Ansätzen zur Erhebung
 einer Statistik entschieden werden.
 Der gewünschte Ansatz ist in Matlab über Strg.
 + Eingabe auszuführen.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
1.) Statistik über 
\emph on
beliebige
\emph default
 Zufallswerte, Parameter Deklaration.
\begin_inset Newline newline
\end_inset

Es wird über den RNG ein Zufallswert erzeugt, aus dem dann ein reproduzierbarer
 Wert für das Spielfeld resultiert.
\begin_inset Newline newline
\end_inset

Die eigene Farbe und die Anzahl der spaceballs Durchläufe wird festgelegt:
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

meineFarbe = 'blau';
\end_layout

\begin_layout LyX-Code

Durchgaenge = 40;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

clc 
\end_layout

\begin_layout LyX-Code

stats(Durchgaenge, meineFarbe, 2);
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
2.) Statistik über 
\emph on
alle
\emph default
 in 1.) genutzten Zufallswerte
\begin_inset Newline newline
\end_inset

Dient z.b als Überprüfungsverfahren nach einer Veränderung in beschleunigung.m
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

clc 
\end_layout

\begin_layout Plain Layout

stats([], [], 1);
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
3.) Statistik über alle 
\emph on
problematischen
\emph default
 Seeds aus 1.)
\begin_inset Newline newline
\end_inset

Hierbei werden explizit nur die Seeds, bei denen verloren oder unentschieden
 gespielt wurde, betrachtet.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

clc 
\end_layout

\begin_layout Plain Layout

stats([], [], 0);
\end_layout

\end_inset


\end_layout

\begin_layout Section
Arbeitsweise und Aufbau der Funktion stats.m
\end_layout

\begin_layout Standard
Nach Eröffnung der Funktion mit den Eingangsparametern
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Durchgaenge, Farbe, seedSource
\end_layout

\end_inset

, die in 1 festgelegt wurden, wird geprüft welche Spielfeldzufallswerte
 (Seeds) für die laufende Statistikerhebung benötigt werden.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Dazu sei hier schon vorweg erwähnt, dass zum Einen problematische Seeds,
 zweitens aber auch alle verwendeten Seeds in jeweils einer .mat Datei gespeicher
t werden.
\end_layout

\end_inset

 Es werden die später benötigten Variablen definiert, welche auf den in
 den .mat Dateien gespeicherten Daten beruhen.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

if seedSource == 0
\end_layout

\begin_layout Plain Layout

   load('seedsFaulty.mat')
\end_layout

\begin_layout Plain Layout

	if isempty(seedsFaulty)
\end_layout

\begin_layout Plain Layout

    	disp ('Keine Seeds vorhanden')
\end_layout

\begin_layout Plain Layout

    	return
\end_layout

\begin_layout Plain Layout

 	end
\end_layout

\begin_layout Plain Layout

   seedNum = length(seedsFaulty);
\end_layout

\begin_layout Plain Layout

   Durchgaenge = seedNum;
\end_layout

\begin_layout Plain Layout

   Farbe = Farbe;
\end_layout

\begin_layout Plain Layout

   rng(zw);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

elseif seedSource == 1
\end_layout

\begin_layout Plain Layout

   load('seedsAll.mat')
\end_layout

\begin_layout Plain Layout

	if isempty(seedsAll)
\end_layout

\begin_layout Plain Layout

    	disp ('Keine Seeds vorhanden')
\end_layout

\begin_layout Plain Layout

    	return
\end_layout

\begin_layout Plain Layout

 	end
\end_layout

\begin_layout Plain Layout

   seedNum = length(seedsAll);
\end_layout

\begin_layout Plain Layout

   Durchgaenge = seedNum;
\end_layout

\begin_layout Plain Layout

   Farbe = Farbe;    rng(zw);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Lediglich bei der seedSource == 2 wird eine komplett unabhängige, 
\emph on
frische
\emph default
 Statistik erzeugt.
 Dazu wird über den RNG ein Zufallswert erzeugt und gleichzeitig als Variable
 definiert, damit diese anschließend in der .mat Datei gesichert werden kann.
 Falls keine Seedquelle vom Nutzer angegeben wurde, resultiert eine Fehlermeldun
g im Command-Window
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Dem wurde insofern vorgebeugt, dass der Nutzer in statistics.m nur noch seine
 Farbe und die Anzahl der Durchläufe angeben muss, nicht aber die Seedquelle.
\end_layout

\end_inset

.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

elseif seedSource == 2
\end_layout

\begin_layout Plain Layout

   Durchgaenge = Durchgaenge;
\end_layout

\begin_layout Plain Layout

   zwVar = rng('shuffle');
\end_layout

\begin_layout Plain Layout

   zw = zwVar.Seed;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

else
\end_layout

\begin_layout Plain Layout

   disp('Fehler! Keine Seedquelle angegeben')
\end_layout

\begin_layout Plain Layout

   return;
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Anschließend wird eine leere Datentabelle generiert, die stets eine Zeile
 mehr hat, als Durchgänge definiert wurden.
 Damit kann eine Spalten-beschreibende Kopfzeile untergebracht werden, die
 sich wie folgt darstellt
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Für Spalte sechs ist keine Benennung nötig, da sie ohnehin nicht visuell
 ausgegeben wird
\end_layout

\end_inset

:
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

data = cell(Durchgaenge+1,6);
\end_layout

\begin_layout Plain Layout

data{1,1} = 'Durchlauf:';
\end_layout

\begin_layout Plain Layout

data{1,2} = 'Ereignis:';
\end_layout

\begin_layout Plain Layout

data{1,3} = 'Grund f.
 Ergeinis:';
\end_layout

\begin_layout Plain Layout

data{1,4} = 'Zeit:';
\end_layout

\begin_layout Plain Layout

data{1,5} = 'Seed:';
\end_layout

\begin_layout Plain Layout

% data{1,6}: 0=Verloren, 1=Gewonnen, 1.1=Gewonnen durch Gegner getroffen,
 2=Crash in Mine, 3=Crash in Bande, 4=me.getankt>enemy.getankt, 5=me.getankt<enemy.g
etankt
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Da es durchaus interessant ist zu erfahren, wie lange Matlab in einem großen
 Statistikdurchlauf über z.B 1000 Durchgänge bereits gerechnet hat, wird
 eine Variable für die Gesamtzeit eingeführt.
 Unter anderem diese Information wird am Ende eines jeden spaceball.m Aufrufs
 ausgegeben.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

% Rechenzeitvariable einführen
\end_layout

\begin_layout LyX-Code

totalTime = 0;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nachdem nun die vorerst benötigten Variablen deklariert wurden, wird folgend
 die Hauptschleife geöffnet.
 Einfach formuliert, wird dort spaceballs.m eben so oft ausgeführt, wie es
 vom Nutzer gewünscht wurde.
 Gleichzeitig werden die eingetretenen Ereignisse in die zuvor generierte
 Datentabelle geschrieben.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

% Hauptschleife
\end_layout

\begin_layout LyX-Code

for i = 1 : Durchgaenge
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es ist noch zwingend erforderlich, die korrekten Seeds an den RNG zu übergeben.
 Dazu wird wieder die Seedquelle herangezogen und geprüft, welcher Ansatz
 zur Durchführung einer Statistik der Nutzer wünscht.
 Aus den entsprechenden .mat Dateien werden die Seeds über den Laufindex
 der For-Schleife gewählt und schließlich an den RNG übergeben.
 Falls seedSource == 2 gewählt wurde, kann über den rand-Befehl ein entsprechend
er zufälliger Seed generiert werden
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Da der RNG für diesen Ansatz zuvor auf 
\emph on
Shuffle
\emph default
 gesetzt wurde, entsteht tatsächlich ein komplett zufälliger Wert.
 
\end_layout

\end_inset

.
 Darauffolgend wird geprüft, welche Spieldaten die eigenen bzw.
 die des Gegners sind.
 
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

% Alle Fenster bis auf das letzte Spaceballspielfeldfenster schließen
\end_layout

\begin_layout LyX-Code

close all
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

% Wert für r ermitteln 
\end_layout

\begin_layout LyX-Code

if seedSource == 0
\end_layout

\begin_layout LyX-Code

	r = seedsFaulty(i,1);
\end_layout

\begin_layout LyX-Code

elseif seedSource == 1
\end_layout

\begin_layout LyX-Code

	r = seedsAll(i,1);
\end_layout

\begin_layout LyX-Code

elseif seedSource == 2
\end_layout

\begin_layout LyX-Code

	r = round(rand(1)*1000000);
\end_layout

\begin_layout LyX-Code

end 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

rng(r)
\end_layout

\begin_layout LyX-Code

spaceballs 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

% Zuweisung der Farbe 
\end_layout

\begin_layout LyX-Code

if strcmp(Farbe,'rot')
\end_layout

\begin_layout LyX-Code

	me = spiel.rot;
\end_layout

\begin_layout LyX-Code

	enemy = spiel.blau;
\end_layout

\begin_layout LyX-Code

	myName = spiel.rot.name;
\end_layout

\begin_layout LyX-Code

	enemyName = spiel.blau.name;
\end_layout

\begin_layout LyX-Code

else 
\end_layout

\begin_layout LyX-Code

	me = spiel.blau;
\end_layout

\begin_layout LyX-Code

	enemy = spiel.rot;
\end_layout

\begin_layout LyX-Code

	myName = spiel.blau.name;
\end_layout

\begin_layout LyX-Code

	enemyName = spiel.rot.name;
\end_layout

\begin_layout LyX-Code

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In jedem Aufruf von spaceballs.m wird nun die Datentabelle durch entsprechende
 Abfragen mit Informationen wie z.B.
 dem aktuellen Durchlauf gefüllt
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Die anfallenden Daten werden jeweils die i+1te Zeile geschrieben, weil die
 Kopfzeile bereits 
\begin_inset Quotes eld
\end_inset

belegt
\begin_inset Quotes erd
\end_inset

 ist und die for-Schleife von 1 bis zur Anzahl der Durchgänge geht.
\end_layout

\end_inset

.
 Zur Veranschaulichung ist hier eine Beispielabfrage aufgeführt:
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

% Datentabelle füllen
\end_layout

\begin_layout LyX-Code

data{i+1,1} = num2str(i);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

if me.punkte == 1 && ~isError
\end_layout

\begin_layout LyX-Code

           data{i+1,2} = 'Gewonnnen';
\end_layout

\begin_layout LyX-Code

           data{i+1,3} = enemy.ereignis;
\end_layout

\begin_layout LyX-Code

           data{i+1,4} = spiel.i_t/100;
\end_layout

\begin_layout LyX-Code

           data{i+1,5} = r;
\end_layout

\begin_layout LyX-Code

           data{i+1,6} = 1;
\end_layout

\begin_layout LyX-Code

            if strcmp(me.ereignis,'Rot trifft Blau.') || strcmp(me.ereignis,'Blau
 trifft Rot.')
\end_layout

\begin_layout LyX-Code

            data{i+1,6} = 1.1;
\end_layout

\begin_layout LyX-Code

           end
\end_layout

\begin_layout LyX-Code

...
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Für den Fall, dass ein Spiel durch klicken in das Spielfeld abgebrochen
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Durch klicken in das Spielfeld wird das laufende Spiel lediglich übersprungen,
 der gesamte Statistikdurchlauf ließe sich z.B mit Strg.
 + C beenden.
\end_layout

\end_inset

 wird, ist dies in der Auswertung berücksichtigt und es wird ein Error vermerkt.
 Außerdem wird über den try-and-catch Befehl, sichergestellt, dass die Statistik
 weiterläuft, sofern ein Error in der beschleunigung.m vorliegt
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Normalerweise würde Matlab den kompletten Berechnungsvorgang abbrechen.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

isError = false;
\end_layout

\begin_layout LyX-Code

try spaceballs;
\end_layout

\begin_layout LyX-Code

catch isError = true;
\end_layout

\begin_layout LyX-Code

end
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

else data{i+1,2} = 'Error';
\end_layout

\begin_layout LyX-Code

data{i+1,3} = me.ereignis;
\end_layout

\begin_layout LyX-Code

data{i+1,4} = spiel.i_t/100;
\end_layout

\begin_layout LyX-Code

data{i+1,5} = r;
\end_layout

\begin_layout LyX-Code

data{i+1,6} = 99;
\end_layout

\begin_layout LyX-Code

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Am Ende der Hauptschleife werden Informationsanzeigen zum aktuellen Fortschritt
 definiert.
 Dazu gehört der aktuell verwendete Seed, die Rechenzeit und eine prozentuale
 Fortschrittsanzeige.
 Zudem werden - bis auf einige Ausnahmen - alle Variablen aus dem Workspace
 gelöscht, da spaceballs.m ohne diese Bereinigung nicht erneut funktionieren
 würde
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Dies ist nötig, da der komplette Initialisierungsteil in spaceballs.m auskommenti
ert wurde.
\end_layout

\end_inset

.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

clearvars -except data Durchgaenge Farbe myName enemyName zw zwVar totalTime
 seedSource seedsFaulty seedsAll
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Damit die Ausnahmen des clearvars Befehls nicht überhandnehmen, werden erst
 nach der Hauptforschleife weitere Variablen deklariert, die zur Auswertung
 heran gezogen werden.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

sumWins = 0;
\end_layout

\begin_layout Plain Layout

sumLose = 0;
\end_layout

\begin_layout Plain Layout

sumAttack = 0;
\end_layout

\begin_layout Plain Layout

sumDefense = 0;
\end_layout

\begin_layout Plain Layout

sumERROR = 0;
\end_layout

\begin_layout Plain Layout

gegErwischt = 0;
\end_layout

\begin_layout Plain Layout

MineGetr = 0;
\end_layout

\begin_layout Plain Layout

BandeGetr = 0;
\end_layout

\begin_layout Plain Layout

time = 0;
\end_layout

\begin_layout Plain Layout

loseSeeds = cell(sumLose,1);
\end_layout

\begin_layout Plain Layout

unentDefense = cell(sumDefense,1);
\end_layout

\begin_layout Plain Layout

unentAttack = cell(sumAttack,1);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In der anschließenden Auswertungsschleife werden die eingetretenen Ereignisse
 jeweils aufsummiert, die Durchschnittszeit berechnet sowie problematische
 Seeds gespeichert.
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

% Auswertungsschleife 
\end_layout

\begin_layout LyX-Code

for i = 1 : Durchgaenge % Ereignissummen Berechnen 
\end_layout

\begin_layout LyX-Code

	if data{i+1,6} == 1
\end_layout

\begin_layout LyX-Code

		sumWins = sumWins + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 1.1
\end_layout

\begin_layout LyX-Code

		sumWins = sumWins + 1;
\end_layout

\begin_layout LyX-Code

		gegErwischt = gegErwischt + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 0
\end_layout

\begin_layout LyX-Code

		sumLose = sumLose + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 2
\end_layout

\begin_layout LyX-Code

		sumLose = sumLose + 1;
\end_layout

\begin_layout LyX-Code

		MineGetr = MineGetr + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 3
\end_layout

\begin_layout LyX-Code

		sumLose = sumLose + 1;
\end_layout

\begin_layout LyX-Code

		BandeGetr = BandeGetr + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 4
\end_layout

\begin_layout LyX-Code

		sumAttack = sumAttack + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 5
\end_layout

\begin_layout LyX-Code

		sumDefense = sumDefense + 1;
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 99
\end_layout

\begin_layout LyX-Code

		sumERROR = sumERROR + 1;
\end_layout

\begin_layout LyX-Code

	end 
\end_layout

\begin_layout LyX-Code
	
\end_layout

\begin_layout LyX-Code

	% Durchschnittszeit berechnen
\end_layout

\begin_layout LyX-Code

	if data{i+1,6} == 1 || 1.1 
\end_layout

\begin_layout LyX-Code

		time = time + data{i+1,4};
\end_layout

\begin_layout LyX-Code

	end
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	medianTime = time/sumWins;
\end_layout

\begin_layout LyX-Code

	% Relevante Seeds speichern
\end_layout

\begin_layout LyX-Code

	if data{i+1,6} == 0
\end_layout

\begin_layout LyX-Code

		loseSeeds{i,1} = data{i+1,5};
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 2
\end_layout

\begin_layout LyX-Code

		loseSeeds{i,1} = data{i+1,5};
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 3
\end_layout

\begin_layout LyX-Code

		loseSeeds{i,1} = data{i+1,5};
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 4
\end_layout

\begin_layout LyX-Code

		unentAttack{i,1} = data{i+1,5};
\end_layout

\begin_layout LyX-Code

	elseif data{i+1,6} == 5
\end_layout

\begin_layout LyX-Code

		unentDefense{i,1} = data{i+1,5};
\end_layout

\begin_layout LyX-Code

	end 
\end_layout

\begin_layout LyX-Code

end
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sodann werden loseSeeds, unentDefense sowie unentAttack zu seedsFaulty zusammeng
efasst und als seedsFaulty.mat abgespeichert.
 Ferner werden alle Seeds als seedsAll.mat gespeichert.
 In beide Dateien werden überdies Informationen über die Farbe und den übergeord
neten Zufallswert zw gespeichert.
 Am Ende des gesamten Statistikdurchlaufes werden nun noch die gesammelten
 Informationen prosaisch dargestellt und dem Nutzer angezeigt:
\end_layout

\begin_layout LyX-Code
\begin_inset listings
inline false
status open

\begin_layout LyX-Code

time = horzcat('Gesamtrechenzeit: ', num2str(round(totalTime/60,1)), ' Minuten')
;
\end_layout

\begin_layout LyX-Code

Gegner = horzcat(myName, ' VS ', enemyName);
\end_layout

\begin_layout LyX-Code

SatzA = horzcat('Von ', num2str(Durchgaenge), ' Spielen wurden ', num2str(sumWin
s), ' gewonnen');
\end_layout

\begin_layout LyX-Code

SatzAB = horzcat('Von ', num2str(Durchgaenge), ' Spielen wurden ', num2str(sumWi
ns), ' in durchschnittlich ', num2str(medianTime), ' Sekunden gewonnen.');
\end_layout

\begin_layout LyX-Code

Quote1 = horzcat('Gewonnen: ', num2str(sumWins/Durchgaenge*100),' %');
\end_layout

\begin_layout LyX-Code

Quote2 = horzcat(' davon den Gegner erwischt: ', num2str(gegErwischt/sumWins*100
),' %');
\end_layout

\begin_layout LyX-Code

Quote3 = horzcat('Verloren: ', num2str(sumLose/Durchgaenge*100),' %');
\end_layout

\begin_layout LyX-Code

Quote4 = horzcat(' davon in Mine gefahren: ', num2str(MineGetr/sumLose*100),'
 %');
\end_layout

\begin_layout LyX-Code

Quote5 = horzcat(' davon in Bande gefahren: ', num2str(BandeGetr/sumLose*100),'
 %');
\end_layout

\begin_layout LyX-Code

Quote6 = horzcat('Unentschieden im Angriff: ', num2str(sumAttack/Durchgaenge*100
),' %');
\end_layout

\begin_layout LyX-Code

Quote7 = horzcat('Unentschieden in der Verteidigung: ', num2str(sumDefense/Durch
gaenge*100),' %');
\end_layout

\begin_layout LyX-Code

Quote8 = horzcat('Error: ', num2str(sumERROR/Durchgaenge*100),' %');
\end_layout

\begin_layout LyX-Code

Statistische_Erhebung = data(:,1:5);
\end_layout

\end_inset


\end_layout

\end_body
\end_document
